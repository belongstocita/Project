# -*- coding: utf-8 -*-
"""TuPro - 03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vZiIX6-SR0ogW8FAi42wD80QML0sUFzF

# Tupro 3 kel 7

Citakamalia

Indah Putri Maharani


Iqlima Putri Hawa
"""

pip install openpyxl

import pandas as pd
import numpy as np
import openpyxl
import math

"""# Import File Trainset"""

!gdown --id 11K4sdfBlT6X0TyiF8f49OV0okEG53kmk

"""# Import File Test"""

!gdown --id 13_3-CRFbeXcuip0CcyqkSiJYVjSiETbv

"""Membaca File Test"""

test = pd.read_excel('test.xlsx')
test

"""Membaca File Data Train"""

train = pd.read_excel('train.xlsx')
train

# Check for null values
train.isna().sum()

#Deskripsi Data Train
train.describe().T

#Menghilangkan kolom nama 
df = train.drop(["id"], axis = 1)

"""Perhitungan Ukuran Jarak

Euclidean
"""

def euclidean(x, y):
	distance = 0
	for i in range(len(y)):
		distance += ((x[i] - y[i]) ** 2)
	return distance ** (1/2)

"""Manhattan"""

def manhattan(x, y):
	distance = 0
	for i in range(len(y)):
		distance += abs((x[i] - y[i]))
	return distance

"""Minskowski"""

def minskowski(x, y, k=2):
    distance = 0
    for i in range(len(x)):
        distance += abs(x[i] - y[i]) ** k
    return distance ** (1/k)

"""Supremum"""

def supremum(x, y):
	distance = []
	for i in range(len(x)):
		distance.append(abs(x[i] - y[i]))
	return max(distance)

"""Main Program"""

# Input Data Frame (x1,x2,x3,y)
data = [5, 6, 7, 8]
pd.set_option('display.width', 200)
pd.set_option('display.max_columns', None)

def mainprogram(X):
  # Mendefinisikan array
  euclidean_list = []
  manhattan_list = []
  minkowski_list = []
  supremum_list = []
  
  temp = df.values
  # Proses penghitungan Data
  for x in temp:
    euclidean_list.append(euclidean(x, data)) 
    manhattan_list.append(manhattan(x, data))
    minkowski_list.append(minskowski(x, data))
    supremum_list.append(supremum(x, data))
  
  train["Euclidean Distance"] = euclidean_list
  train["Manhattan Distance"] = manhattan_list
  train["Minkowski Distance"] = minkowski_list
  train["Supremum Distance"]  = supremum_list


  # Sorting Data dan Mengimport hasil data ke Excel
  EuclideanData = train.sort_values(by=['Euclidean Distance'])[:X]
  EuclideanData.to_excel('Euclidean.xlsx', index=False, header=True) 
  
  ManhattanData = train.sort_values(by=['Manhattan Distance'])[:X]
  ManhattanData.to_excel('Manhattan.xlsx', index=False, header=True)
  
  MinkowskiData = train.sort_values(by=['Minkowski Distance'])[:X]
  MinkowskiData.to_excel('Minkowski.xlsx', index=False, header=True)
  
  SupremumData = train.sort_values(by=['Supremum Distance'])[:X]
  SupremumData.to_excel('Supremum.xlsx', index=False, header=True)

  return ManhattanData, EuclideanData, MinkowskiData, SupremumData

EuclideanData, ManhattanData, MinkowskiData, SupremumData = mainprogram(6)


# Menampilkan Hasil Data
print("==== Euclidean Distance ====")
print(EuclideanData)
print("==== Manhattan Distance ====")
print(ManhattanData)
print("==== Minkowski Distance ====")
print(MinkowskiData)
print("==== Supremum Distance ====")
print(SupremumData)